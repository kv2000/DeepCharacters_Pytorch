character {
    skeleton_dir =./test_data/ddc.skeleton
    skinning_dir =./test_data/ddc.skin
    template_mesh_dir =./test_data/ddc.obj
    graph_dir = ./test_data/ddc_graph.obj
    rest_pose_dir = ./test_data/ddc.motion
    blending_type = dqs                                 # dqs or lbs
    deformation_type = embedded                         # embdded deformation or skinning only 
    hand_mask_dir = ./test_data/hand_segmentation.txt
    use_sparse = True                                   # if used in dataloader then set false
    compute_eg = True                                   # if set false then return canonical even for posed entry
    compute_delta = True                                # if set false then return canonical even for posed entry
    compute_posed = True                                # if set false then return canonical even for posed entry   
}

spatial_gcn { 
    dense_initializer_scale = 0.001
    feature_size1 = 16
    feature_size2 = 16
    use_batch_norm = 1
    fully_connected = 'nofull'
    ring_value = 2
    normalize = 1
    dense_inner_block = 0
    num_residual_blocks = 8
    input_size = 18
    output_size = 6
}

delta_gcn { 
    dense_initializer_scale = 0.001
    feature_size1 = 16
    feature_size2 = 16
    use_batch_norm = 0
    fully_connected = 'nofull'
    ring_value = 3
    normalize = 1
    dense_inner_block = 1
    num_residual_blocks = 8
    input_size = 9
    output_size = 3
}

dataset {
    skeleton_angles = ./test_data/skeletoolToGTPose/poseAngles.motion
    skeleton_angles_rotation_normalized = ./test_data/skeletoolToGTPose/poseAnglesRotationNormalized.motion
}

train {
    load_eg_checkpoints = False
    eg_checkpoint_dir = False

    load_delta_checkpoints = True
    delta_checkpoint_dir = ./checkpoints/state_dict.pth
}

